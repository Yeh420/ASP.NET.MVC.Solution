@model Products.Models.ViewModels.ProductCreateVM

@{
    ViewBag.Title = "新增商品";
}

<h2>新增商品</h2>


@using (Html.BeginForm("Create","Products",FormMethod.Post,new {enctype="multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="mb-3">
            @Html.LabelFor(model => model.CategoryId,htmlAttributes: new { @class = "form-label" })
            
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-select" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "form-label" })
            
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "form-label" })
            
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "form-label" })
            
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "form-label" })
            
                <div class="checkbox">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "form-label" })

            @*@Html.EditorFor(model => model.ProductImage, new { htmlAttributes = new { @class = "form-control" } })*@
            <input type="file" name="file1" class="form-control" multiple="multiple" accept="image/*"/>
            @Html.ValidationMessageFor(model => model.ProductImage, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "form-label" })
            
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
        </div>

        <div class="mb-3">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
